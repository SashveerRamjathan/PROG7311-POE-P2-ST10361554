@model List<DataContextAndModels.DataTransferObjects.ProductDto>

@{
    ViewData["Title"] = "Product Management";
}

<div class="container mt-5">
    <h2 class="mb-4 text-primary fw-bold"><i class="bi bi-box-seam me-2"></i>All Available Products</h2>

    @* Success Message *@
    @if (ViewData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@ViewData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @* Error Message *@
    @if (ViewData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>@ViewData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @* Filter Notification *@
    @if (!string.IsNullOrEmpty(Context.Request.Query["category"]) ||
    !string.IsNullOrEmpty(Context.Request.Query["startDate"]) ||
    !string.IsNullOrEmpty(Context.Request.Query["endDate"]))
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            <i class="bi bi-filter-circle me-2"></i>Showing filtered results.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm mb-4 border-0">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Filters</h5>
            <button class="btn btn-outline-primary btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#filterForm" aria-expanded="false" aria-controls="filterForm">
                <i class="bi bi-funnel me-2"></i> Toggle Filters
            </button>
        </div>

        <div id="filterForm" class="collapse">
            <div class="card-body">
                <form asp-action="Index" method="get" class="row g-3">
                    <div class="col-md-3">
                        <label for="category" class="form-label">Category</label>
                        <select class="form-select" id="category" name="category" asp-items="@ViewData["CategorySelectList"] as SelectList">
                            <option value="">-- All Categories --</option>
                        </select>
                    </div>

                    <div class="col-md-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" id="startDate" name="startDate" class="form-control" value="@(Context.Request.Query["startDate"])" />
                    </div>

                    <div class="col-md-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" id="endDate" name="endDate" class="form-control" value="@(Context.Request.Query["endDate"])" />
                    </div>

                    <div class="col-md-3">
                        <label for="sortBy" class="form-label">Sort By</label>
                        <select class="form-select" id="sortBy" name="sortBy">
                            <option value="name_asc" selected="@(Context.Request.Query["sortBy"] == "name_asc" ? "selected" : null)">Name A-Z</option>
                            <option value="name_desc" selected="@(Context.Request.Query["sortBy"] == "name_desc" ? "selected" : null)">Name Z-A</option>
                            <option value="date_asc" selected="@(Context.Request.Query["sortBy"] == "date_asc" ? "selected" : null)">Production Date ↑</option>
                            <option value="date_desc" selected="@(Context.Request.Query["sortBy"] == "date_desc" ? "selected" : null)">Production Date ↓</option>
                        </select>
                    </div>

                    <div class="col-12 d-flex justify-content-end gap-2 mt-2">
                        <a asp-action="Index" class="btn btn-outline-secondary"><i class="bi bi-arrow-clockwise"></i> Reset</a>
                        <button type="submit" class="btn btn-primary"><i class="bi bi-filter"></i> Apply Filters</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>No products available.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var product in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm border-light">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0"><i class="bi bi-box-fill me-2"></i>@product.Name</h5>
                        </div>
                        <div class="card-body">
                            <p><i class="bi bi-file-text me-1 text-muted"></i><strong>Description:</strong> @product.Description</p>
                            <p><i class="bi bi-cash-coin me-1 text-muted"></i><strong>Price:</strong> R @product.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-ZA"))</p>
                            <p><i class="bi bi-stack me-1 text-muted"></i><strong>Quantity:</strong> @product.Quantity</p>
                            <p><i class="bi bi-calendar-event me-1 text-muted"></i><strong>Production Date:</strong> @product.ProductionDate.ToString("dd-MMMM-yyyy")</p>
                            <p><i class="bi bi-tags me-1 text-muted"></i><strong>Category:</strong> @product.CategoryName</p>
                            <p><i class="bi bi-person-badge me-1 text-muted"></i><strong>Farmer:</strong> @product.FarmerName</p>
                        </div>
                        <div class="card-footer bg-light d-flex justify-content-between flex-wrap gap-2">
                            <a asp-controller="Products" asp-action="Details" asp-route-id="@product.Id" class="btn btn-info btn-sm">
                                <i class="bi bi-eye"></i> Details
                            </a>
                            @if (User.IsInRole("Employee"))
                            {
                                <a asp-controller="Products" asp-action="Edit" asp-route-id="@product.Id" class="btn btn-warning btn-sm">
                                    <i class="bi bi-pencil-square"></i> Edit
                                </a>
                                <a asp-controller="Products" asp-action="Delete" asp-route-id="@product.Id" class="btn btn-danger btn-sm">
                                    <i class="bi bi-trash"></i> Delete
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
